{"instance_id": "astropy__astropy-11693", "model_name_or_path": "gpt-4o-mini", "model_patch": " diff --git a/astropy/wcs/wcsapi/fitswcs.py b/astropy/wcs/wcsapi/fitswcs.py\n index 5bcd8a2..7e52c12 100644\n --- a/astropy/wcs/wcsapi/fitswcs.py\n +++ b/astropy/wcs/wcsapi/fitswcs.py\n @@ -323,7 +323,7 @@ def world_to_pixel_values(self, *world_arrays):\n         \"\"\"Convert world coordinates to pixel coordinates.\"\"\"\n         # using 0 for origin is a common use case in plotting\n         pixel = self.all_world2pix(*world_arrays, 0, quiet=True)\n         return pixel[0] if self.pixel_n_dim == 1 else tuple(pixel)"}
{"instance_id": "astropy__astropy-12057", "model_name_or_path": "gpt-4o-mini", "model_patch": "diff --git a/astropy/nddata/uncertainty.py b/astropy/nddata/uncertainty.py\nindex abcdef1..fedcba2 100644\n--- a/astropy/nddata/uncertainty.py\n+++ b/astropy/nddata/uncertainty.py\n@@ -1,6 +1,7 @@\n from astropy.nddata import (\n     VarianceUncertainty, StdDevUncertainty, InverseVariance,\n )\n \n+def std_to_var(obj):\n+    return VarianceUncertainty(obj.array ** 2, unit=obj.unit ** 2)\n \n def var_to_invvar(obj):\n     return InverseVariance(obj.array ** -1, unit=obj.unit ** -1)\n@@ -7,6 +8,16 @@ def var_to_invvar(obj):\n     return VarianceUncertainty(obj.array ** -1, unit=obj.unit ** -1)\n \n def var_to_std(obj):\n     return VarianceUncertainty(obj.array ** 1/2, unit=obj.unit ** 1/2)\n \n FUNC_MAP = {\n     (StdDevUncertainty, VarianceUncertainty): std_to_var,\n     (StdDevUncertainty, InverseVariance): lambda x: var_to_invvar(\n         std_to_var(x)\n     ),\n     (VarianceUncertainty, StdDevUncertainty): var_to_std,\n     (VarianceUncertainty, InverseVariance): var_to_invvar,\n     (InverseVariance, StdDevUncertainty): lambda x: var_to_std(\n         invvar_to_var(x)\n     ),\n     (InverseVariance, VarianceUncertainty): invvar_to_var,\n     (StdDevUncertainty, StdDevUncertainty): lambda x: x,\n     (VarianceUncertainty, VarianceUncertainty): lambda x: x,\n     (InverseVariance, InverseVariance): lambda x: x,\n@@ -14,6 +35,8 @@ FUNC_MAP = {\n }\n \n def convert_uncertainties(obj, new_class):\n+    \"\"\"Convert uncertainties between different types.\"\"\"\n+    \n     return FUNC_MAP[(type(obj), new_class)](obj)"}
